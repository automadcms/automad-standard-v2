/*
 * Automad Standard v2
 *
 * Copyright 2024 Marc Anton Dahmen, MIT license
 * https://marcdahmen.de
 */

html,
body {
	min-height: 100%;
}

body {
	padding: @std-body-padding;
}

.std-layout {
	display: grid;
	align-items: stretch;
	max-width: @std-layout-max-width;
	min-height: 100%;
	margin: 0 auto;
	--title-height: auto;
	--block-margin-left: auto;
	--sidebar-width: @std-aside-width;
	--gap: var(--std-layout-gap);

	@media (max-width: @std-breakpoint-s-max) {
		--sidebar-width: 0px;
	}

	grid-template-columns: var(--columns);
	grid-template-rows:
		[navbar-top]
		auto
		[navbar-bottom hero-top]
		auto
		[hero-bottom breadcrumbs-top]
		auto
		[breadcrumbs-bottom title-top]
		var(--title-height)
		[title-bottom main-top]
		1fr
		[main-bottom prev-next-top]
		auto
		[prev-next-bottom related-top]
		auto
		[related-bottom footer-top]
		auto
		[footer-bottom];

	&--tag {
		/* prettier-ignore */
		--columns:
			[nav-start title-start main-start]
			1fr
			[nav-end title-end main-end];
	}

	&--page-sidebar,
	&--pagelist-sidebar {
		--block-margin-left: 0px;
		--gap-sidebar: 0px;

		@media (min-width: @std-breakpoint-m) {
			--gap-sidebar: ~'calc(((100% - @{std-block-width}) / 2) - var(--sidebar-width))';
		}

		/* prettier-ignore */
		--columns:
			[brand-start hero-start sidebar-start]
			var(--sidebar-width)
			[brand-end sidebar-end]
			var(--gap-sidebar)
			[nav-start breadcrumbs-start title-start main-start prev-next-start related-start footer-start]
			~'min(100%, @{std-block-width})'
			[breadcrumbs-end title-end prev-next-end related-end footer-end]
			1fr
			[nav-end hero-end main-end];
	}

	&--page-sidebar-and-toc-centered {
		--gap-sidebar: 0px;

		@media (min-width: @std-breakpoint-m) {
			--gap-sidebar: ~'min(var(--gap), max(1rem, calc((100% - 2 * var(--sidebar-width) - 2 * var(--gap) - @{std-block-width}) / 2)))';
		}

		/* prettier-ignore */
		--columns:
			[brand-start hero-start sidebar-start]
			var(--sidebar-width)
			[brand-end sidebar-end]
			var(--gap-sidebar)
			[main-start]
			1fr
			[nav-start breadcrumbs-start title-start prev-next-start related-start footer-start]
			~'min(100%, @{std-block-width})'
			[breadcrumbs-end title-end prev-next-end related-end footer-end]
			1fr
			[main-end]
			var(--gap-sidebar)
			[toc-start]
			var(--sidebar-width)
			[nav-end hero-end toc-end];
	}

	&--page-full-width-centered,
	&--pagelist-full-width-centered,
	&--page-not-found {
		/* prettier-ignore */
		--columns:
			[brand-start hero-start main-start]
			~'calc(((100% - @{std-block-width}) / 2) - var(--gap))'
			[brand-end]
			1fr
			[nav-start breadcrumbs-start title-start prev-next-start related-start footer-start]
			~'min(100%, @{std-block-width})'
			[breadcrumbs-end title-end prev-next-end related-end footer-end]
			1fr
			[spacer]
			~'calc(((100% - @{std-block-width}) / 2) - var(--gap))'
			[nav-end hero-end main-end];
	}

	&--page-full-width-left,
	&--pagelist-full-width-left {
		--block-margin-left: 0px;
		--am-block-max-width: ~'max(@{std-block-min-width}, calc(50% - var(--std-layout-gap)))';

		/* prettier-ignore */
		--columns:
			[brand-start hero-start breadcrumbs-start title-start main-start prev-next-start related-start footer-start]
			1fr
			[brand-end]
			var(--gap)
			[nav-start]
			1fr
			[nav-end hero-end breadcrumbs-end title-end main-end prev-next-end related-end footer-end];
	}

	&--page-full-width-left-and-toc {
		--block-margin-left: 0px;
		--am-block-max-width: ~'max(@{std-block-min-width}, calc(((100% + var(--std-layout-gap) + @{std-aside-width}) / 2) - var(--std-layout-gap)))';
		--gap-toc: var(--gap);

		@media (max-width: @std-breakpoint-s-max) {
			--gap-toc: 0px;
		}

		/* prettier-ignore */
		--columns:
			[brand-start hero-start breadcrumbs-start title-start main-start prev-next-start related-start footer-start]
			~'calc(50% - (var(--gap) / 2))'
			[brand-end]
			var(--gap)
			[nav-start]
			1fr
			[breadcrumbs-end title-end main-end]
			var(--gap-toc)
			[toc-start]
			var(--sidebar-width)
			[nav-end hero-end toc-end prev-next-end related-end footer-end];
	}

	&--page-split {
		--block-margin-left: 0px;

		/* prettier-ignore */
		--columns:
			[brand-start hero-start breadcrumbs-start title-start main-start prev-next-start related-start footer-start]
			1fr
			[brand-end]
			var(--gap)
			[nav-start]
			1fr
			[nav-end hero-end breadcrumbs-end title-end main-end prev-next-end related-end footer-end];

		@media (min-width: @std-breakpoint-m) {
			--title-height: 0px;

			& .std-layout__title {
				position: sticky;
				top: 1rem;
			}

			/* prettier-ignore */
			--columns:
				[brand-start hero-start breadcrumbs-start title-start related-start footer-start]
				1fr
				[brand-end title-end]
				var(--gap)
				[nav-start main-start prev-next-start]
				2fr
				[nav-end hero-end breadcrumbs-end main-end prev-next-end related-end footer-end];
		}

		@media (min-width: @std-breakpoint-l) {
			--title-height: 0px;

			/* prettier-ignore */
			--columns:
				[brand-start hero-start breadcrumbs-start title-start related-start footer-start]
				1fr
				[brand-end title-end]
				var(--gap)
				[nav-start main-start prev-next-start]
				1fr
				[nav-end hero-end breadcrumbs-end main-end prev-next-end related-end footer-end];
		}
	}

	& .am-block {
		margin-left: var(--block-margin-left);
	}

	&__brand {
		position: relative;
		z-index: 1;
		min-width: 150px;
		grid-column: brand-start / brand-end;
		grid-row: navbar-top / navbar-bottom;
	}

	&__navbar {
		display: flex;
		justify-content: end;
		align-items: var(--std-navbar-align-items, start);
		grid-column: nav-start / nav-end;
		grid-row: navbar-top / navbar-bottom;

		& &-links {
			flex-grow: 1;
			display: flex;

			@media (max-width: @std-breakpoint-s-max) {
				display: none;
			}

			&--vertical {
				flex-direction: column;
			}
		}
	}

	// In case there is no hero section apply the actual navbar bottom padding
	// to the following element such as breadcrumbs or title as top padding.
	&__navbar + :not(&__hero) {
		padding-top: var(--std-navbar-space-bottom);
	}

	&__hero {
		grid-column: hero-start / hero-end;
		grid-row: hero-top / hero-bottom;
		padding-top: var(--std-hero-space-top);
		padding-bottom: var(--std-hero-space-bottom);
	}

	&__breadcrumbs {
		grid-column: breadcrumbs-start / breadcrumbs-end;
		grid-row: breadcrumbs-top / breadcrumbs-bottom;
		padding-bottom: var(--std-breadcrumbs-space-bottom);
	}

	&__sidebar {
		grid-column: sidebar-start / sidebar-end;
		grid-row: title-top / main-bottom;
	}

	&__title {
		grid-column: title-start / title-end;
		grid-row: title-top / title-bottom;
		padding-bottom: var(--std-title-space-bottom);
	}

	&__main {
		grid-column: main-start / main-end;
		grid-row: main-top / main-bottom;
		padding-bottom: var(--std-main-space-bottom);
	}

	&__toc {
		grid-column: toc-start / toc-end;
		grid-row: title-top / main-bottom;

		@media (max-width: @std-breakpoint-s-max) {
			display: none;
		}
	}

	&__prev-next {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: var(--std-layout-gap);
		grid-column: prev-next-start / prev-next-end;
		grid-row: prev-next-top / prev-next-bottom;
		padding-bottom: var(--std-prev-next-space-bottom);

		@media (max-width: @std-breakpoint-xs-max) {
			grid-template-columns: 1fr;
		}
	}

	&__related {
		grid-column: related-start / related-end;
		grid-row: related-top / related-bottom;
		padding-bottom: var(--std-related-space-bottom);
	}

	&__footer {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: var(--std-layout-gap);
		grid-column: footer-start / footer-end;
		grid-row: footer-top / footer-bottom;
		padding-top: var(--std-footer-space-top);

		@media (max-width: @std-breakpoint-xs-max) {
			grid-template-columns: 1fr;
		}
	}

	// In case there is no prev-next navigation and no related pagelist
	// set the top padding to 0 in order deduplicate paddings with main.
	&__main + &__footer {
		padding-top: 0;
	}
}
